# Flexible CMake Modules
# ------------------------------------------------------------------------------
# Author: Pavel Tsayukov
# Repository: https://github.com/tsayukov/flexible-cmake-modules
# Distributed under the MIT License. See the accompanying file LICENSE or
# https://opensource.org/license/mit for details.
# ------------------------------------------------------------------------------
#
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# FOR COAUTHORS AND CONTRIBUTORS: fill in your name, contacts, and changes above
#
#[=================================================================[#github/wiki
# Watchers

Watchers of deprecated commands and normal variables.

## Table of Contents

- [fcm_mark_command_as_deprecated](#fcm_mark_command_as_deprecated)
- [fcm_mark_normal_variable_as_deprecated](#fcm_mark_normal_variable_as_deprecated)

## fcm_mark_command_as_deprecated

For CMake version 3.18+, mark the `<command>` command as deprecated because
of `"<reason>"`.

```
fcm_mark_command_as_deprecated(<command> "<reason>")
```

Before CMake 3.18, a corresponding macro may be written manually after each
definition of a deprecated command:

```cmake
# E.g., `foo` is a deprecated command now
macro(foo)
  message(DEPRECATION "The `foo` command is deprecated.")
  _foo(${ARGV})
endmacro()
```

## fcm_mark_normal_variable_as_deprecated

Mark the `<variable>` normal variable as deprecated because of `"<reason>"`.

```
fcm_mark_normal_variable_as_deprecated(<variable> "<reason>")
```

Even though this macro can be used only for normal variables, since
all project cached entries have aliases, these aliases can be used as normal
variables in this macro.

#]=================================================================]#github/wiki

include_guard(GLOBAL)


macro(@FCM_COMMAND_PREFIX@mark_command_as_deprecated
  command
  reason
)
  cmake_language(EVAL CODE "
    macro(${command})
      message(DEPRECATION \"The `${command}` command is deprecated because of: ${reason}.\")
      _${command}(" [=[ ${ARGV} ]=] ")
    endmacro()"
  )
endmacro()

macro(@FCM_COMMAND_PREFIX@mark_normal_variable_as_deprecated
  variable
  reason
)
  function(@FCM_COMMAND_PREFIX@internal_watcher_deprecated_${variable}
    variable
    access
  )
    if (access STREQUAL "READ_ACCESS")
      message(DEPRECATION "The `${variable}` normal variable is deprecated because of: ${reason}")
    endif()
  endfunction()

  variable_watch(${variable} @FCM_COMMAND_PREFIX@internal_watcher_deprecated_${variable})
endmacro()
