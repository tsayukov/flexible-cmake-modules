# Flexible CMake Modules
# ------------------------------------------------------------------------------
# Author: Pavel Tsayukov
# Repository: https://github.com/tsayukov/flexible-cmake-modules
# Distributed under the MIT License. See the accompanying file LICENSE or
# https://opensource.org/license/mit for details.
# ------------------------------------------------------------------------------
#
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# FOR COAUTHORS AND CONTRIBUTORS: fill in your name, contacts, and changes above
#
#[=================================================================[#github/wiki
# Clang-format

Enable [`<FCM_PROJECT_CACHE_PREFIX>ENABLE_FORMATTING`][201]
to use `clang-format`. If `clang-format` cannot be found,
set `CLANG_FORMAT_PATH` to the path to the binary file of `clang-format`.

## fcm_clang_format_add

Add a `<FCM_PROJECT_TARGET_PREFIX><target_suffix>` custom target to format
files matching GLOB `<patterns>` in `<directories>`.

```
fcm_clang_format_add(<target_suffix>
                     [DIRECTORIES <directories>...]
                     [FILES_PATTERNS <patterns>...])
```

By default, `<directories>` is [`CMAKE_CURRENT_SOURCE_DIR`][301].

By default, `<patterns>` includes:
- `*.h`,`*.hh`,`*.h++`,`*.hpp`,`*.hxx`;
- `*.c`,`*.cc`,`*.c++`,`*.cpp`,`*.cxx`.

[201]: https://github.com/tsayukov/flexible-cmake-modules/wiki/Variables#ENABLE_FORMATTING

[301]: https://cmake.org/cmake/help/latest/variable/CMAKE_CURRENT_SOURCE_DIR.html

[501]: https://clang.llvm.org/docs/ClangFormat.html

#]=================================================================]#github/wiki

include_guard(GLOBAL)


function(@FCM_COMMAND_PREFIX@clang_format_add
  target_suffix
)
  @FCM_COMMAND_PREFIX@enable_if(ENABLE_FORMATTING)

  cmake_parse_arguments(PARSE_ARGV 1 "ARGS" "" "" "DIRECTORIES;FILES_PATTERNS")

  if (NOT DEFINED ARGS_DIRECTORIES)
    set(ARGS_DIRECTORIES "${CMAKE_CURRENT_SOURCE_DIR}")
  endif()

  if (NOT DEFINED ARGS_FILES_PATTERNS)
    set(ARGS_FILES_PATTERNS
      # Headers
      "*.h"
      "*.hh"
      "*.h++"
      "*.hpp"
      "*.hxx"
      # Sources
      "*.c"
      "*.cc"
      "*.c++"
      "*.cpp"
      "*.cxx"
    )
  endif()

  set(patterns "")
  foreach(dir IN LISTS ARGS_DIRECTORIES)
    if (NOT IS_ABSOLUTE "${dir}")
      set(dir "${CMAKE_CURRENT_SOURCE_DIR}/${dir}")
    endif()

    set(dir_with_patterns ${ARGS_FILES_PATTERNS})
    list(TRANSFORM dir_with_patterns PREPEND "${dir}/")
    list(APPEND patterns ${dir_with_patterns})
  endforeach()

  file(GLOB_RECURSE files FOLLOW_SYMLINKS LIST_DIRECTORIES false ${patterns})

  @FCM_COMMAND_PREFIX@get_project_target_prefix()
  add_custom_target(${FCM_PROJECT_TARGET_PREFIX}${target_suffix}
    COMMAND ${CLANG_FORMAT_PATH}
      -i --style=file ${files}
    COMMENT "Format files via clang-format"
  )
endfunction()


############################## clang-format init ###############################

@FCM_COMMAND_PREFIX@enable_if(ENABLE_FORMATTING)

find_program(CLANG_FORMAT_PATH clang-format REQUIRED)
mark_as_advanced(CLANG_FORMAT_PATH)
